// bibliotheque d'execution pour mini-ml
// module Pervasives
//
// LoÃ¯c Sylvestre
//
///////////////////////////////////////////////////////////////
// [exit n]
///////////////////////////////////////////////////////////////
function ML_pervasives.exit 0
	push argument 0
	call Sys.error 1 
	return
///////////////////////////////////////////////////////////////
// val failwith : string -> 'a
///////////////////////////////////////////////////////////////
function ML_pervasives.failwith 0
    push argument 0
	call ML_pervasives.print_string 1
	push constant 1
	call ML_pervasives.exit 1
	return
///////////////////////////////////////////////////////////////
// val ref : 'a -> 'a ref
///////////////////////////////////////////////////////////////
function ML_pervasives.ref 0
	push constant 1
	push argument 0
	call ML_array.make 2
	return
///////////////////////////////////////////////////////////////
// val ref_contents : 'a ref -> 'a
///////////////////////////////////////////////////////////////
function ML_pervasives.ref_contents 0
	push argument 0
	push constant 0
	call ML_array.get 2
	return 
///////////////////////////////////////////////////////////////
// val ref_set_contents : 'a ref -> 'a -> unit
///////////////////////////////////////////////////////////////
function ML_pervasives.ref_set_contents 0
	push argument 0
	push constant 0
	push argument 1
	call ML_array.set 3
	return
///////////////////////////////////////////////////////////////
// val incr : int ref -> unit
///////////////////////////////////////////////////////////////
function ML_pervasives.incr 0
	push argument 0
	push argument 0
	call ML_pervasives.ref_contents 1
	push constant 1
	add
	call ML_pervasives.ref_set_contents 2
	return
///////////////////////////////////////////////////////////////
// val decr : int ref -> unit
///////////////////////////////////////////////////////////////
function ML_pervasives.decr 0
	push argument 0
	push argument 0
	call ML_pervasives.ref_contents 1
	push constant 1
	sub
	call ML_pervasives.ref_set_contents 2
	return
///////////////////////////////////////////////////////////////
// val fst : 'a * 'b -> 'a 
///////////////////////////////////////////////////////////////
function ML_pervasives.fst 0
	push argument 0
	call ML_internal.fst 1
	return
///////////////////////////////////////////////////////////////
// val snd : 'a * 'b -> 'b
///////////////////////////////////////////////////////////////
function ML_pervasives.snd 0
	push argument 0
	call ML_internal.snd 1
	return
///////////////////////////////////////////////////////////////
// val hd : 'a list -> 'a 
///////////////////////////////////////////////////////////////
function ML_pervasives.hd 0
	push argument 0
	call ML_internal.fst 1
	return
///////////////////////////////////////////////////////////////
// val tl : 'a list -> 'a
///////////////////////////////////////////////////////////////
function ML_pervasives.tl 0
	push argument 0
	call ML_internal.snd 1
	return
///////////////////////////////////////////////////////////////
// val print_int : int -> unit
///////////////////////////////////////////////////////////////
function ML_pervasives.print_int 0
	push argument 0
	call Output.printInt 1
	push constant 0
 	return
///////////////////////////////////////////////////////////////
// val print_char : char -> unit
///////////////////////////////////////////////////////////////
function ML_pervasives.print_char 0
	push argument 0
	call Output.printChar 1
	push constant 0
 	return
 ///////////////////////////////////////////////////////////////
// val print_newline : unit -> unit
///////////////////////////////////////////////////////////////
function ML_pervasives.print_newline 0
	call Output.println 0
	push argument 0
 	return	
///////////////////////////////////////////////////////////////
// val print_string : string -> unit
///////////////////////////////////////////////////////////////
function ML_pervasives.print_string 2
	push argument 0
	call ML_string.length 1
	pop local 0
	push constant 0
	pop local 1
label L1
	push local 1
	push local 0
	lt
	not
	if-goto L2
	push argument 0
	push local 1
	call ML_string.get 2
	call Output.printChar 1
	push constant 1
	push local 1
	add 
	pop local 1
	goto L1
label L2
 	return
///////////////////////////////////////////////////////////////
// val int_of_char : char -> int
///////////////////////////////////////////////////////////////
function ML_pervasives.int_of_char 0
	push argument 0
	return 
///////////////////////////////////////////////////////////////
// val char_of_int : int -> char
///////////////////////////////////////////////////////////////
function ML_pervasives.char_of_int 0
	push argument 0
	return