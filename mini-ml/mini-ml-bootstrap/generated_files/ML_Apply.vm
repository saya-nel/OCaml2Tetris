function ML_Apply.apply 0
    push argument 0
    push constant 0
    call ML_Internal.array_get 2
    push constant 10018
    eq
    not
    if-goto A10018
    push argument 0
    push argument 1
    call ML_Apply.closure10018 2
    goto EndApply
label A10018
    push argument 0
    push constant 0
    call ML_Internal.array_get 2
    push constant 10017
    eq
    not
    if-goto A10017
    push argument 0
    push argument 1
    call ML_Apply.closure10017 2
    goto EndApply
label A10017
    push argument 0
    push constant 0
    call ML_Internal.array_get 2
    push constant 10016
    eq
    not
    if-goto A10016
    push argument 0
    push argument 1
    call ML_Apply.closure10016 2
    goto EndApply
label A10016
    push argument 0
    push constant 0
    call ML_Internal.array_get 2
    push constant 10015
    eq
    not
    if-goto A10015
    push argument 0
    push argument 1
    call ML_Apply.closure10015 2
    goto EndApply
label A10015
    push argument 0
    push constant 0
    call ML_Internal.array_get 2
    push constant 10014
    eq
    not
    if-goto A10014
    push argument 0
    push argument 1
    call ML_Apply.closure10014 2
    goto EndApply
label A10014
    push argument 0
    push constant 0
    call ML_Internal.array_get 2
    push constant 10013
    eq
    not
    if-goto A10013
    push argument 0
    push argument 1
    call ML_Apply.closure10013 2
    goto EndApply
label A10013
    push argument 0
    push constant 0
    call ML_Internal.array_get 2
    push constant 10012
    eq
    not
    if-goto A10012
    push argument 0
    push argument 1
    call ML_Apply.closure10012 2
    goto EndApply
label A10012
    push argument 0
    push constant 0
    call ML_Internal.array_get 2
    push constant 10011
    eq
    not
    if-goto A10011
    push argument 0
    push argument 1
    call ML_Apply.closure10011 2
    goto EndApply
label A10011
    push argument 0
    push constant 0
    call ML_Internal.array_get 2
    push constant 10010
    eq
    not
    if-goto A10010
    push argument 0
    push argument 1
    call ML_Apply.closure10010 2
    goto EndApply
label A10010
    push argument 0
    push constant 0
    call ML_Internal.array_get 2
    push constant 10009
    eq
    not
    if-goto A10009
    push argument 0
    push argument 1
    call ML_Apply.closure10009 2
    goto EndApply
label A10009
    push argument 0
    push constant 0
    call ML_Internal.array_get 2
    push constant 10008
    eq
    not
    if-goto A10008
    push argument 0
    push argument 1
    call ML_Apply.closure10008 2
    goto EndApply
label A10008
    push argument 0
    push constant 0
    call ML_Internal.array_get 2
    push constant 10007
    eq
    not
    if-goto A10007
    push argument 0
    push argument 1
    call ML_Apply.closure10007 2
    goto EndApply
label A10007
    push argument 0
    push constant 0
    call ML_Internal.array_get 2
    push constant 10006
    eq
    not
    if-goto A10006
    push argument 0
    push argument 1
    call ML_Apply.closure10006 2
    goto EndApply
label A10006
    push argument 0
    push constant 0
    call ML_Internal.array_get 2
    push constant 10002
    eq
    not
    if-goto A10002
    push argument 0
    push argument 1
    call ML_Apply.closure10002 2
    goto EndApply
label A10002
    push argument 0
    push constant 0
    call ML_Internal.array_get 2
    push constant 10003
    eq
    not
    if-goto A10003
    push argument 0
    push argument 1
    call ML_Apply.closure10003 2
    goto EndApply
label A10003
    push argument 0
    push constant 0
    call ML_Internal.array_get 2
    push constant 10001
    eq
    not
    if-goto A10001
    push argument 0
    push argument 1
    call ML_Apply.closure10001 2
    goto EndApply
label A10001
label EndApply
    return
function ML_Apply.closure10018 0
    push argument 0
    push constant 1
    call ML_Array.get 2
    push argument 1
    call ML_Bc_print.string_of_instr 1
    call ML_Apply.apply 2
    return
function ML_Apply.closure10017 6
    push argument 1
    pop local 0
    push local 0
    push constant 256
    gt
    not
    not
    if-goto IfFalse325
    push local 0
    goto IfEnd326
label IfFalse325
    push local 0
    push constant 0
    call ML_Array.get 2
label IfEnd326
    pop local 1
    push local 0
    push constant 1
    call ML_Array.get 2
    pop local 2
    push local 0
    push constant 2
    call ML_Array.get 2
    pop local 3
    push local 0
    push constant 3
    call ML_Array.get 2
    pop local 4
    push constant 4
    call ML_Array.create_uninitialized 1
    pop local 5
    push local 5
    push constant 0
    push constant 0
    call ML_Internal.array_set 3
    pop temp 0
    push local 5
    push constant 1
    push local 2
    call ML_Internal.array_set 3
    pop temp 0
    push local 5
    push constant 2
    push local 3
    call ML_Internal.array_set 3
    pop temp 0
    push local 5
    push constant 3
    push local 3
    call ML_Ast_closure.rw_exp 1
    push local 4
    call ML_Apply.apply 2
    call ML_Internal.array_set 3
    pop temp 0
    push local 5
    return
function ML_Apply.closure10016 6
    push argument 1
    pop local 0
    push local 0
    push constant 256
    gt
    not
    not
    if-goto IfFalse323
    push local 0
    goto IfEnd324
label IfFalse323
    push local 0
    push constant 0
    call ML_Array.get 2
label IfEnd324
    pop local 1
    push local 0
    push constant 1
    call ML_Array.get 2
    pop local 2
    push local 0
    push constant 2
    call ML_Array.get 2
    pop local 3
    push local 0
    push constant 3
    call ML_Array.get 2
    pop local 4
    push constant 4
    call ML_Array.create_uninitialized 1
    pop local 5
    push local 5
    push constant 0
    push constant 0
    call ML_Internal.array_set 3
    pop temp 0
    push local 5
    push constant 1
    push local 2
    call ML_Internal.array_set 3
    pop temp 0
    push local 5
    push constant 2
    push local 3
    call ML_Internal.array_set 3
    pop temp 0
    push local 5
    push constant 3
    push local 3
    call ML_Ast_closure.rw_exp 1
    push local 4
    call ML_Apply.apply 2
    call ML_Internal.array_set 3
    pop temp 0
    push local 5
    return
function ML_Apply.closure10015 6
    push argument 1
    pop local 0
    push local 0
    push constant 256
    gt
    not
    not
    if-goto IfFalse319
    push local 0
    goto IfEnd320
label IfFalse319
    push local 0
    push constant 0
    call ML_Array.get 2
label IfEnd320
    pop local 1
    push local 0
    push constant 1
    call ML_Array.get 2
    pop local 2
    push local 0
    push constant 2
    call ML_Array.get 2
    pop local 3
    push local 0
    push constant 3
    call ML_Array.get 2
    pop local 4
    push constant 4
    call ML_Array.create_uninitialized 1
    pop local 5
    push local 5
    push constant 0
    push constant 0
    call ML_Internal.array_set 3
    pop temp 0
    push local 5
    push constant 1
    push local 2
    call ML_Internal.array_set 3
    pop temp 0
    push local 5
    push constant 2
    push local 3
    call ML_Internal.array_set 3
    pop temp 0
    push local 5
    push constant 3
    push local 3
    call ML_Ast_closure.rw_exp 1
    push local 4
    call ML_Apply.apply 2
    call ML_Internal.array_set 3
    pop temp 0
    push local 5
    return
function ML_Apply.closure10014 5
    push argument 1
    pop local 0
    push local 0
    push constant 256
    gt
    not
    not
    if-goto IfFalse297
    push local 0
    goto IfEnd298
label IfFalse297
    push local 0
    push constant 0
    call ML_Array.get 2
label IfEnd298
    pop local 1
    push local 1
    push constant 1
    lt
    not
    if-goto IfFalse301
    push local 0
    push constant 1
    call ML_Array.get 2
    pop local 2
    push local 0
    push constant 2
    call ML_Array.get 2
    pop local 3
    push constant 3
    call ML_Array.create_uninitialized 1
    pop local 4
    push local 4
    push constant 0
    push constant 0
    call ML_Internal.array_set 3
    pop temp 0
    push local 4
    push constant 1
    push local 2
    call ML_Internal.array_set 3
    pop temp 0
    push local 4
    push constant 2
    push argument 0
    push constant 1
    call ML_Array.get 2
    push local 3
    call ML_Ast_closure.rw_exp 2
    call ML_Internal.array_set 3
    pop temp 0
    push local 4
    goto IfEnd302
label IfFalse301
    push local 1
    push constant 1
    eq
    not
    if-goto IfFalse299
    push local 0
    push constant 1
    call ML_Array.get 2
    pop local 2
    push constant 2
    call ML_Array.create_uninitialized 1
    pop local 3
    push local 3
    push constant 0
    push constant 1
    call ML_Internal.array_set 3
    pop temp 0
    push local 3
    push constant 1
    push argument 0
    push constant 1
    call ML_Array.get 2
    push local 2
    call ML_Ast_closure.rw_exp 2
    call ML_Internal.array_set 3
    pop temp 0
    push local 3
    goto IfEnd300
label IfFalse299
    push constant 1
    call ML_Pervasives.exit 1
label IfEnd300
label IfEnd302
    return
function ML_Apply.closure10013 1
    push constant 2
    call ML_Array.create_uninitialized 1
    pop local 0
    push local 0
    push constant 0
    push constant 1
    call ML_Internal.array_set 3
    pop temp 0
    push local 0
    push constant 1
    push argument 1
    call ML_Internal.array_set 3
    pop temp 0
    push local 0
    return
function ML_Apply.closure10012 6
    push argument 1
    pop local 0
    push local 0
    push constant 256
    gt
    not
    not
    if-goto IfFalse273
    push local 0
    goto IfEnd274
label IfFalse273
    push local 0
    push constant 0
    call ML_Array.get 2
label IfEnd274
    pop local 1
    push local 0
    push constant 1
    call ML_Array.get 2
    pop local 2
    push local 0
    push constant 2
    call ML_Array.get 2
    pop local 3
    push local 0
    push constant 3
    call ML_Array.get 2
    pop local 4
    push constant 4
    call ML_Array.create_uninitialized 1
    pop local 5
    push local 5
    push constant 0
    push constant 0
    call ML_Internal.array_set 3
    pop temp 0
    push local 5
    push constant 1
    push local 2
    call ML_Internal.array_set 3
    pop temp 0
    push local 5
    push constant 2
    push local 3
    call ML_Internal.array_set 3
    pop temp 0
    push local 5
    push constant 3
    push local 4
    call ML_Ast_globz.rw_exp 1
    call ML_Internal.array_set 3
    pop temp 0
    push local 5
    return
function ML_Apply.closure10011 6
    push argument 1
    pop local 0
    push local 0
    push constant 256
    gt
    not
    not
    if-goto IfFalse271
    push local 0
    goto IfEnd272
label IfFalse271
    push local 0
    push constant 0
    call ML_Array.get 2
label IfEnd272
    pop local 1
    push local 0
    push constant 1
    call ML_Array.get 2
    pop local 2
    push local 0
    push constant 2
    call ML_Array.get 2
    pop local 3
    push local 0
    push constant 3
    call ML_Array.get 2
    pop local 4
    push constant 4
    call ML_Array.create_uninitialized 1
    pop local 5
    push local 5
    push constant 0
    push constant 0
    call ML_Internal.array_set 3
    pop temp 0
    push local 5
    push constant 1
    push local 2
    call ML_Internal.array_set 3
    pop temp 0
    push local 5
    push constant 2
    push local 3
    call ML_Internal.array_set 3
    pop temp 0
    push local 5
    push constant 3
    push local 4
    call ML_Ast_globz.rw_exp 1
    call ML_Internal.array_set 3
    pop temp 0
    push local 5
    return
function ML_Apply.closure10010 6
    push argument 1
    pop local 0
    push local 0
    push constant 256
    gt
    not
    not
    if-goto IfFalse267
    push local 0
    goto IfEnd268
label IfFalse267
    push local 0
    push constant 0
    call ML_Array.get 2
label IfEnd268
    pop local 1
    push local 0
    push constant 1
    call ML_Array.get 2
    pop local 2
    push local 0
    push constant 2
    call ML_Array.get 2
    pop local 3
    push local 0
    push constant 3
    call ML_Array.get 2
    pop local 4
    push constant 4
    call ML_Array.create_uninitialized 1
    pop local 5
    push local 5
    push constant 0
    push constant 0
    call ML_Internal.array_set 3
    pop temp 0
    push local 5
    push constant 1
    push local 2
    call ML_Internal.array_set 3
    pop temp 0
    push local 5
    push constant 2
    push local 3
    call ML_Internal.array_set 3
    pop temp 0
    push local 5
    push constant 3
    push local 4
    call ML_Ast_globz.rw_exp 1
    call ML_Internal.array_set 3
    pop temp 0
    push local 5
    return
function ML_Apply.closure10009 5
    push argument 1
    pop local 0
    push local 0
    push constant 256
    gt
    not
    not
    if-goto IfFalse237
    push local 0
    goto IfEnd238
label IfFalse237
    push local 0
    push constant 0
    call ML_Array.get 2
label IfEnd238
    pop local 1
    push local 1
    push constant 1
    lt
    not
    if-goto IfFalse241
    push local 0
    push constant 1
    call ML_Array.get 2
    pop local 2
    push local 0
    push constant 2
    call ML_Array.get 2
    pop local 3
    push constant 3
    call ML_Array.create_uninitialized 1
    pop local 4
    push local 4
    push constant 0
    push constant 0
    call ML_Internal.array_set 3
    pop temp 0
    push local 4
    push constant 1
    push local 2
    call ML_Internal.array_set 3
    pop temp 0
    push local 4
    push constant 2
    push local 3
    call ML_Ast_globz.rw_exp 1
    call ML_Internal.array_set 3
    pop temp 0
    push local 4
    goto IfEnd242
label IfFalse241
    push local 1
    push constant 1
    eq
    not
    if-goto IfFalse239
    push local 0
    push constant 1
    call ML_Array.get 2
    pop local 2
    push constant 2
    call ML_Array.create_uninitialized 1
    pop local 3
    push local 3
    push constant 0
    push constant 1
    call ML_Internal.array_set 3
    pop temp 0
    push local 3
    push constant 1
    push local 2
    call ML_Ast_globz.rw_exp 1
    call ML_Internal.array_set 3
    pop temp 0
    push local 3
    goto IfEnd240
label IfFalse239
    push constant 1
    call ML_Pervasives.exit 1
label IfEnd240
label IfEnd242
    return
function ML_Apply.closure10008 2
    push constant 0
    call ML_Ast_lift.create 1
    pop local 0
    push local 0
    push local 1
    call ML_Ast_lift.rw_decl 2
    pop local 1
    push local 0
    push constant 0
    call ML_Internal.array_get 2
    push local 1
    push constant 0
    call ML_Internal.make_pair 2
    call ML_List.rev_append 2
    return
function ML_Apply.closure10007 6
    push argument 1
    pop local 0
    push local 0
    push constant 256
    gt
    not
    not
    if-goto IfFalse217
    push local 0
    goto IfEnd218
label IfFalse217
    push local 0
    push constant 0
    call ML_Array.get 2
label IfEnd218
    pop local 1
    push local 0
    push constant 1
    call ML_Array.get 2
    pop local 2
    push local 0
    push constant 2
    call ML_Array.get 2
    pop local 3
    push local 0
    push constant 3
    call ML_Array.get 2
    pop local 4
    push constant 4
    call ML_Array.create_uninitialized 1
    pop local 5
    push local 5
    push constant 0
    push constant 0
    call ML_Internal.array_set 3
    pop temp 0
    push local 5
    push constant 1
    push local 2
    call ML_Internal.array_set 3
    pop temp 0
    push local 5
    push constant 2
    push local 3
    call ML_Internal.array_set 3
    pop temp 0
    push local 5
    push constant 3
    push argument 0
    push constant 1
    call ML_Array.get 2
    push constant 0
    push constant 0
    push local 4
    call ML_Ast_lift.rw_exp 4
    call ML_Internal.array_set 3
    pop temp 0
    push local 5
    return
function ML_Apply.closure10006 5
    push argument 1
    pop local 0
    push local 0
    push constant 256
    gt
    not
    not
    if-goto IfFalse191
    push local 0
    goto IfEnd192
label IfFalse191
    push local 0
    push constant 0
    call ML_Array.get 2
label IfEnd192
    pop local 1
    push local 1
    push constant 1
    lt
    not
    if-goto IfFalse195
    push local 0
    push constant 1
    call ML_Array.get 2
    pop local 2
    push local 0
    push constant 2
    call ML_Array.get 2
    pop local 3
    push constant 3
    call ML_Array.create_uninitialized 1
    pop local 4
    push local 4
    push constant 0
    push constant 0
    call ML_Internal.array_set 3
    pop temp 0
    push local 4
    push constant 1
    push local 2
    call ML_Internal.array_set 3
    pop temp 0
    push local 4
    push constant 2
    push argument 0
    push constant 1
    call ML_Array.get 2
    push argument 0
    push constant 2
    call ML_Array.get 2
    push argument 0
    push constant 3
    call ML_Array.get 2
    push local 3
    call ML_Ast_lift.rw_exp 4
    call ML_Internal.array_set 3
    pop temp 0
    push local 4
    goto IfEnd196
label IfFalse195
    push local 1
    push constant 1
    eq
    not
    if-goto IfFalse193
    push local 0
    push constant 1
    call ML_Array.get 2
    pop local 2
    push constant 2
    call ML_Array.create_uninitialized 1
    pop local 3
    push local 3
    push constant 0
    push constant 1
    call ML_Internal.array_set 3
    pop temp 0
    push local 3
    push constant 1
    push argument 0
    push constant 1
    call ML_Array.get 2
    push argument 0
    push constant 2
    call ML_Array.get 2
    push argument 0
    push constant 3
    call ML_Array.get 2
    push local 2
    call ML_Ast_lift.rw_exp 4
    call ML_Internal.array_set 3
    pop temp 0
    push local 3
    goto IfEnd194
label IfFalse193
    push constant 1
    call ML_Pervasives.exit 1
label IfEnd194
label IfEnd196
    return
function ML_Apply.closure10002 2
    push constant 2
    call ML_Array.create_uninitialized 1
    pop local 1
    push local 1
    push constant 0
    push constant 10003
    call ML_Internal.array_set 3
    pop temp 0
    push local 1
    push constant 1
    push argument 1
    call ML_Internal.array_set 3
    pop temp 0
    push local 1
    return
function ML_Apply.closure10003 1
    push constant 3
    call ML_Array.create_uninitialized 1
    pop local 0
    push local 0
    push constant 0
    push constant 3
    call ML_Internal.array_set 3
    pop temp 0
    push local 0
    push constant 1
    push argument 0
    push constant 1
    call ML_Array.get 2
    call ML_Internal.array_set 3
    pop temp 0
    push local 0
    push constant 2
    push argument 1
    call ML_Internal.array_set 3
    pop temp 0
    push local 0
    return
function ML_Apply.closure10001 4
    push argument 1
    pop local 1
    push local 1
    push constant 256
    gt
    not
    not
    if-goto IfFalse151
    push local 1
    goto IfEnd152
label IfFalse151
    push local 1
    push constant 0
    call ML_Array.get 2
label IfEnd152
    pop local 2
    push local 2
    push constant 1
    lt
    not
    if-goto IfFalse155
    push local 1
    push constant 1
    call ML_Array.get 2
    pop local 3
    push local 1
    push constant 2
    call ML_Array.get 2
    pop local 0
    push local 0
    goto IfEnd156
label IfFalse155
    push local 2
    push constant 1
    eq
    not
    if-goto IfFalse153
    push local 1
    push constant 1
    call ML_Array.get 2
    pop local 0
    push local 0
    goto IfEnd154
label IfFalse153
    push constant 1
    call ML_Pervasives.exit 1
label IfEnd154
label IfEnd156
    pop local 0
    push argument 0
    push constant 1
    call ML_Array.get 2
    push argument 0
    push constant 2
    call ML_Array.get 2
    push argument 0
    push constant 3
    call ML_Array.get 2
    push local 0
    call ML_Freevr.collect_exp 4
    return
